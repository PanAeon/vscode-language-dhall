>-- This is a line comment
#^^ source.dhall comment.line.double-dash.dhall
#  ^^^^^^^^^^^^^^^^^^^^^^^ source.dhall comment.line.double-dash.dhall
>next line should be not comment
#^^^^ source.dhall meta.label.dhall
#    ^ source.dhall
#     ^^^^ source.dhall meta.label.dhall
#         ^ source.dhall
#          ^^^^^^ source.dhall meta.label.dhall
#                ^ source.dhall
#                 ^^ source.dhall meta.label.dhall
#                   ^ source.dhall
#                    ^^^ source.dhall meta.label.dhall
#                       ^ source.dhall
#                        ^^^^^^^ source.dhall meta.label.dhall
>
>-- First comment line
#^^ source.dhall comment.line.double-dash.dhall
#  ^^^^^^^^^^^^^^^^^^^ source.dhall comment.line.double-dash.dhall
>-- Second comment line
#^^ source.dhall comment.line.double-dash.dhall
#  ^^^^^^^^^^^^^^^^^^^^ source.dhall comment.line.double-dash.dhall
>
>in {--} between
#^^ source.dhall keyword.control.dhall
#  ^ source.dhall
#   ^^ source.dhall comment.block.dhall
#     ^^ source.dhall comment.block.dhall
#       ^ source.dhall
#        ^^^^^^^ source.dhall meta.label.dhall
>
>{-
#^^ source.dhall comment.block.dhall
>multiline
#^^^^^^^^^^ source.dhall comment.block.dhall
>-}
#^^ source.dhall comment.block.dhall
>comment should be closed
#^^^^^^^ source.dhall meta.label.dhall
#       ^ source.dhall
#        ^^^^^^ source.dhall meta.label.dhall
#              ^ source.dhall
#               ^^ source.dhall meta.label.dhall
#                 ^ source.dhall
#                  ^^^^^^ source.dhall meta.label.dhall
> 
>-- Comments can be nested!
#^^ source.dhall comment.line.double-dash.dhall
#  ^^^^^^^^^^^^^^^^^^^^^^^^ source.dhall comment.line.double-dash.dhall
>{- foo {- bar -} baz -} yes!
#^^ source.dhall comment.block.dhall
#  ^^^^^ source.dhall comment.block.dhall
#       ^^ source.dhall comment.block.dhall comment.block.dhall
#         ^^^^^ source.dhall comment.block.dhall comment.block.dhall
#              ^^ source.dhall comment.block.dhall comment.block.dhall
#                ^^^^^ source.dhall comment.block.dhall
#                     ^^ source.dhall comment.block.dhall
#                       ^ source.dhall
#                        ^^^ source.dhall meta.label.dhall
#                           ^^ source.dhall
>
>--! Better comments should work with my comments
#^^ source.dhall comment.line.double-dash.dhall
#  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.dhall comment.line.double-dash.dhall
>
>{- TODO:  but no luck, alas -}
#^^ source.dhall comment.block.dhall
#  ^^^^^^^^^^^^^^^^^^^^^^^^^^ source.dhall comment.block.dhall
#                            ^^ source.dhall comment.block.dhall
>
>
>'''''''''''''''' -- should interpret as 
#^^^^^^^^^^^^^^^^^ source.dhall
#                 ^^ source.dhall comment.line.double-dash.dhall
#                   ^^^^^^^^^^^^^^^^^^^^^ source.dhall comment.line.double-dash.dhall
>                 --  four escape sequences
#^^^^^^^^^^^^^^^^^ source.dhall
#                 ^^ source.dhall comment.line.double-dash.dhall
#                   ^^^^^^^^^^^^^^^^^^^^^^^ source.dhall comment.line.double-dash.dhall
>
>-- rezerved words:
#^^ source.dhall comment.line.double-dash.dhall
#  ^^^^^^^^^^^^^^^^ source.dhall comment.line.double-dash.dhall
>
>; A simple label cannot be one of the following reserved names:
#^^ source.dhall
#  ^ source.dhall meta.label.dhall
#   ^ source.dhall
#    ^^^^^^ source.dhall meta.label.dhall
#          ^ source.dhall
#           ^^^^^ source.dhall meta.label.dhall
#                ^ source.dhall
#                 ^^^^^^ source.dhall meta.label.dhall
#                       ^ source.dhall
#                        ^^ source.dhall meta.label.dhall
#                          ^ source.dhall
#                           ^^^ source.dhall meta.label.dhall
#                              ^ source.dhall
#                               ^^ source.dhall meta.label.dhall
#                                 ^ source.dhall
#                                  ^^^ source.dhall meta.label.dhall
#                                     ^ source.dhall
#                                      ^^^^^^^^^ source.dhall meta.label.dhall
#                                               ^ source.dhall
#                                                ^^^^^^^^ source.dhall meta.label.dhall
#                                                        ^ source.dhall
#                                                         ^^^^^ source.dhall meta.label.dhall
#                                                              ^ source.dhall keyword.other.colon.dhall
>;
#^^ source.dhall
>; * Bool
#^^ source.dhall
#  ^ source.dhall keyword.operator.arithmetic.dhall
#   ^ source.dhall
#    ^^^^ source.dhall support.class.dhall
>; * Optional
#^^ source.dhall
#  ^ source.dhall keyword.operator.arithmetic.dhall
#   ^ source.dhall
#    ^^^^^^^^ source.dhall support.class.dhall
>; * None
#^^ source.dhall
#  ^ source.dhall keyword.operator.arithmetic.dhall
#   ^ source.dhall
#    ^^^^ source.dhall support.class.dhall
>; * Natural
#^^ source.dhall
#  ^ source.dhall keyword.operator.arithmetic.dhall
#   ^ source.dhall
#    ^^^^^^^ source.dhall support.class.dhall
>; * Integer
#^^ source.dhall
#  ^ source.dhall keyword.operator.arithmetic.dhall
#   ^ source.dhall
#    ^^^^^^^ source.dhall support.class.dhall
>; * Double
#^^ source.dhall
#  ^ source.dhall keyword.operator.arithmetic.dhall
#   ^ source.dhall
#    ^^^^^^ source.dhall entity.name.function
>; * Text
#^^ source.dhall
#  ^ source.dhall keyword.operator.arithmetic.dhall
#   ^ source.dhall
#    ^^^^ source.dhall support.class.dhall
>; * List
#^^ source.dhall
#  ^ source.dhall keyword.operator.arithmetic.dhall
#   ^ source.dhall
#    ^^^^ source.dhall support.class.dhall
>; * True
#^^ source.dhall
#  ^ source.dhall keyword.operator.arithmetic.dhall
#   ^ source.dhall
#    ^^^^ source.dhall constant.language.dhall
>; * False
#^^ source.dhall
#  ^ source.dhall keyword.operator.arithmetic.dhall
#   ^ source.dhall
#    ^^^^^ source.dhall constant.language.dhall
>; * NaN
#^^ source.dhall
#  ^ source.dhall keyword.operator.arithmetic.dhall
#   ^ source.dhall
#    ^^^ source.dhall constant.language.dhall
>; * Infinity
#^^ source.dhall
#  ^ source.dhall keyword.operator.arithmetic.dhall
#   ^ source.dhall
#    ^^^^^^^^ source.dhall constant.language.dhall
>; * Type
#^^ source.dhall
#  ^ source.dhall keyword.operator.arithmetic.dhall
#   ^ source.dhall
#    ^^^^ source.dhall keyword.other.dhall
>; * Kind
#^^ source.dhall
#  ^ source.dhall keyword.operator.arithmetic.dhall
#   ^ source.dhall
#    ^^^^ source.dhall keyword.other.dhall
>; * Sort
#^^ source.dhall
#  ^ source.dhall keyword.operator.arithmetic.dhall
#   ^ source.dhall
#    ^^^^ source.dhall keyword.other.dhall
>; * Natural/fold
#^^ source.dhall
#  ^ source.dhall keyword.operator.arithmetic.dhall
#   ^ source.dhall
#    ^^^^^^^^^^^^ source.dhall entity.name.function
>; * Natural/build
#^^ source.dhall
#  ^ source.dhall keyword.operator.arithmetic.dhall
#   ^ source.dhall
#    ^^^^^^^^^^^^^ source.dhall entity.name.function
>; * Natural/isZero
#^^ source.dhall
#  ^ source.dhall keyword.operator.arithmetic.dhall
#   ^ source.dhall
#    ^^^^^^^^^^^^^^ source.dhall entity.name.function
>; * Natural/even
#^^ source.dhall
#  ^ source.dhall keyword.operator.arithmetic.dhall
#   ^ source.dhall
#    ^^^^^^^^^^^^ source.dhall entity.name.function
>; * Natural/odd
#^^ source.dhall
#  ^ source.dhall keyword.operator.arithmetic.dhall
#   ^ source.dhall
#    ^^^^^^^^^^^ source.dhall entity.name.function
>; * Natural/toInteger
#^^ source.dhall
#  ^ source.dhall keyword.operator.arithmetic.dhall
#   ^ source.dhall
#    ^^^^^^^^^^^^^^^^^ source.dhall entity.name.function
>; * Natural/show
#^^ source.dhall
#  ^ source.dhall keyword.operator.arithmetic.dhall
#   ^ source.dhall
#    ^^^^^^^^^^^^ source.dhall entity.name.function
>; * Integer/toDouble
#^^ source.dhall
#  ^ source.dhall keyword.operator.arithmetic.dhall
#   ^ source.dhall
#    ^^^^^^^^^^^^^^^^ source.dhall entity.name.function
>; * Integer/show
#^^ source.dhall
#  ^ source.dhall keyword.operator.arithmetic.dhall
#   ^ source.dhall
#    ^^^^^^^^^^^^ source.dhall entity.name.function
>; * Double/show
#^^ source.dhall
#  ^ source.dhall keyword.operator.arithmetic.dhall
#   ^ source.dhall
#    ^^^^^^ source.dhall entity.name.function
#          ^^^^^ source.dhall string.unquoted.file.dhall meta.path.file.dhall
>; * List/build
#^^ source.dhall
#  ^ source.dhall keyword.operator.arithmetic.dhall
#   ^ source.dhall
#    ^^^^^^^^^^ source.dhall entity.name.function
>; * List/fold
#^^ source.dhall
#  ^ source.dhall keyword.operator.arithmetic.dhall
#   ^ source.dhall
#    ^^^^^^^^^ source.dhall entity.name.function
>; * List/length
#^^ source.dhall
#  ^ source.dhall keyword.operator.arithmetic.dhall
#   ^ source.dhall
#    ^^^^^^^^^^^ source.dhall entity.name.function
>; * List/head
#^^ source.dhall
#  ^ source.dhall keyword.operator.arithmetic.dhall
#   ^ source.dhall
#    ^^^^^^^^^ source.dhall entity.name.function
>; * List/last
#^^ source.dhall
#  ^ source.dhall keyword.operator.arithmetic.dhall
#   ^ source.dhall
#    ^^^^^^^^^ source.dhall entity.name.function
>; * List/indexed
#^^ source.dhall
#  ^ source.dhall keyword.operator.arithmetic.dhall
#   ^ source.dhall
#    ^^^^^^^^^^^^ source.dhall entity.name.function
>; * List/reverse
#^^ source.dhall
#  ^ source.dhall keyword.operator.arithmetic.dhall
#   ^ source.dhall
#    ^^^^^^^^^^^^ source.dhall entity.name.function
>; * Optional/fold
#^^ source.dhall
#  ^ source.dhall keyword.operator.arithmetic.dhall
#   ^ source.dhall
#    ^^^^^^^^^^^^^ source.dhall entity.name.function
>; * Optional/build
#^^ source.dhall
#  ^ source.dhall keyword.operator.arithmetic.dhall
#   ^ source.dhall
#    ^^^^^^^^^^^^^^ source.dhall entity.name.function
>; * if
#^^ source.dhall
#  ^ source.dhall keyword.operator.arithmetic.dhall
#   ^ source.dhall
#    ^^ source.dhall keyword.control.conditional.dhall
>; * then
#^^ source.dhall
#  ^ source.dhall keyword.operator.arithmetic.dhall
#   ^ source.dhall
#    ^^^^ source.dhall keyword.control.conditional.dhall
>; * else
#^^ source.dhall
#  ^ source.dhall keyword.operator.arithmetic.dhall
#   ^ source.dhall
#    ^^^^ source.dhall keyword.control.conditional.dhall
>; * let
#^^ source.dhall
#  ^ source.dhall keyword.operator.arithmetic.dhall
#   ^ source.dhall
#    ^^^ source.dhall meta.declaration.expression.let.dhall keyword.other.let.dhall
>; * in
#^^^^ source.dhall meta.declaration.expression.let.dhall
#    ^^ source.dhall keyword.control.dhall
>; * as
#^^ source.dhall
#  ^ source.dhall keyword.operator.arithmetic.dhall
#   ^ source.dhall
#    ^^ source.dhall keyword.control.dhall
>; * using
#^^ source.dhall
#  ^ source.dhall keyword.operator.arithmetic.dhall
#   ^ source.dhall
#    ^^^^^ source.dhall keyword.control.dhall
>; * merge
#^^ source.dhall
#  ^ source.dhall keyword.operator.arithmetic.dhall
#   ^ source.dhall
#    ^^^^^ source.dhall keyword.control.dhall
>; * constructors
#^^ source.dhall
#  ^ source.dhall keyword.operator.arithmetic.dhall
#   ^ source.dhall
#    ^^^^^^^^^^^^ source.dhall keyword.control.dhall
>; * Some
#^^ source.dhall
#  ^ source.dhall keyword.operator.arithmetic.dhall
#   ^ source.dhall
#    ^^^^ source.dhall constant.language.dhall
>
>-- words
#^^ source.dhall comment.line.double-dash.dhall
#  ^^^^^^ source.dhall comment.line.double-dash.dhall
>_this_is_single_word
#^^^^^^^^^^^^^^^^^^^^ source.dhall meta.label.dhall
>List/indexed -- not sure if this should break on '/' or not
#^^^^^^^^^^^^ source.dhall entity.name.function
#            ^ source.dhall
#             ^^ source.dhall comment.line.double-dash.dhall
#               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.dhall comment.line.double-dash.dhall
>
>`this.is.a12_-.quot$ed.word`
#^ source.dhall
# ^^^^ source.dhall meta.label.dhall
#     ^ source.dhall
#      ^^ source.dhall meta.label.dhall
#        ^ source.dhall
#         ^^^^^ source.dhall meta.label.dhall
#              ^ source.dhall
#               ^^^^ source.dhall meta.label.dhall
#                   ^ source.dhall
#                    ^^ source.dhall meta.label.dhall
#                      ^ source.dhall
#                       ^^^^ source.dhall meta.label.dhall
#                           ^^ source.dhall
>
>
>
>-- should autoclose:
#^^ source.dhall comment.line.double-dash.dhall
#  ^^^^^^^^^^^^^^^^^^ source.dhall comment.line.double-dash.dhall
>''well, that's something''
#^^ source.dhall
#  ^^^^ source.dhall meta.label.dhall
#      ^^ source.dhall
#        ^^^^ source.dhall meta.label.dhall
#            ^ source.dhall
#             ^ source.dhall meta.label.dhall
#              ^ source.dhall
#               ^^^^^^^^^ source.dhall meta.label.dhall
#                        ^^ source.dhall string.quoted.single.dhall
>""
#^^^ source.dhall string.quoted.single.dhall
>[]
#^^^ source.dhall string.quoted.single.dhall
><>
#^^^ source.dhall string.quoted.single.dhall
>()
#^^^ source.dhall string.quoted.single.dhall
>-- but not in strings
#^^^^^^^^^^^^^^^^^^^^^^ source.dhall string.quoted.single.dhall
>"''"
#^ source.dhall string.quoted.single.dhall
# ^^ source.dhall string.quoted.single.dhall
#   ^ source.dhall string.quoted.double.dhall
>
>-- or comm''ents
#^^^^^^^^^^^^^^^^^ source.dhall string.quoted.double.dhall
>-12345
#^^^^^^^ source.dhall string.quoted.double.dhall
>+12345
#^^^^^^^ source.dhall string.quoted.double.dhall
> 12345
#^^^^^^^ source.dhall string.quoted.double.dhall
>440394 
#^^^^^^^^ source.dhall string.quoted.double.dhall
>
>-- TODO: Infinity, -Infinity are numbers
#^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.dhall string.quoted.double.dhall
>Infinity
#^^^^^^^^^ source.dhall string.quoted.double.dhall
>-Infinity
#^^^^^^^^^^ source.dhall string.quoted.double.dhall
>
>abcd
#^^^^^ source.dhall string.quoted.double.dhall
>
>
>
>
>